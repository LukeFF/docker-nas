---
version: '3.8'

services:
  cloudflared:
    image: cloudflare/cloudflared:2023.8.2
    container_name: cloudflared
    restart: always
    command: tunnel --no-autoupdate run
    env_file:
      - .env

  traefik:
    image: traefik:2.10.5
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - authelia
    env_file:
      - .env
    volumes:
      - ${DATA}/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro

  whoami:
    image: traefik/whoami
    container_name: whoami
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)'
      - 'traefik.http.routers.whoami.entrypoints=websecure'
      - 'traefik.http.routers.whoami.tls=true'
      - 'traefik.http.routers.whoami.middlewares=cf-real-ip@file, authelia@docker'
      - 'traefik.http.services.whoami.loadbalancer.passhostheader=true'
      - 'traefik.http.services.whoami.loadbalancer.server.port=80'

  authelia:
    image: authelia/authelia:4.37.5
    container_name: authelia
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/authelia:/config
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.${DOMAIN}`)'
      - 'traefik.http.routers.authelia.entrypoints=websecure'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.middlewares=cf-real-ip@file'
      - 'traefik.http.services.authelia.loadbalancer.passhostheader=true'
      - 'traefik.http.services.authelia.loadbalancer.server.port=9091'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/authz/forward-auth?authelia_url=https://auth.${DOMAIN}'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'

  homepage:
    image: ghcr.io/benphelps/homepage:v0.7.1
    container_name: homepage
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 3000:3000
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.homepage.rule=Host(`www.${DOMAIN}`)||Host(`${DOMAIN}`)'
      - 'traefik.http.routers.homepage.entrypoints=websecure'
      - 'traefik.http.routers.homepage.tls=true'
      - 'traefik.http.routers.homepage.middlewares=cf-real-ip@file, authelia@docker'
      - 'traefik.http.services.homepage.loadbalancer.passhostheader=true'
      - 'traefik.http.services.homepage.loadbalancer.server.port=3000'

  homeassistant:
    image: homeassistant/home-assistant:2023.10
    container_name: homeassistant
    restart: unless-stopped
    network_mode: host
    env_file:
      - .env
    volumes:
      - ${DATA}/homeassistant:/config

  redis:
    image: redis:7
    container_name: redis
    volumes:
      - ${DATA}/redis:/data

  mariadb:
    image: mariadb:10.11.5
    container_name: mariadb
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/mariadb:/var/lib/mysql

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:1.17.4
    container_name: paperless
    restart: unless-stopped
    depends_on:
      - mariadb
      - redis
      - gotenberg
      - tika
    env_file:
      - .env
    ports:
      - 8000:8000
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000']
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ${DATA}/paperless/data:/usr/src/paperless/data
      - /mnt/user/paperless-media:/usr/src/paperless/media
      - /mnt/user/paperless-export:/usr/src/paperless/export
      - /mnt/user/paperless-import:/usr/src/paperless/consume
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.paperless.rule=Host(`paperless.${DOMAIN}`)'
      - 'traefik.http.routers.paperless.entrypoints=websecure'
      - 'traefik.http.routers.paperless.tls=true'
      - 'traefik.http.routers.paperless.middlewares=cf-real-ip@file'
      - 'traefik.http.services.paperless.loadbalancer.passhostheader=true'
      - 'traefik.http.services.paperless.loadbalancer.server.port=8000'

  gotenberg:
    image: gotenberg/gotenberg:7.9.2
    container_name: gotenberg
    restart: unless-stopped
    command:
      - 'gotenberg'
      - '--chromium-disable-javascript=true'
      - '--chromium-allow-list=file:///tmp/.*'

  tika:
    image: ghcr.io/paperless-ngx/tika:2.9.0-minimal
    container_name: tika
    restart: unless-stopped

  # primelooter:
  #   image: ghcr.io/srhinos/primelooter:latest
  #   container_name: primelooter
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   volumes:
  #     - ${DATA}/primelooter/cookies.txt:/app/cookies.txt
  #     - ${DATA}/primelooter/publishers.txt:/app/publishers.txt
  #     - ${DATA}/primelooter/game_codes.txt:/app/game_codes.txt
