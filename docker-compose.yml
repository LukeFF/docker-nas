---
version: '3.8'

include:
  - ./adguardhome/docker-compose.yml
  - ./omada-controller/docker-compose.yml

services:
  cloudflared:
    image: cloudflare/cloudflared:2023.8.2
    container_name: cloudflared
    restart: always
    command: tunnel --no-autoupdate run
    env_file:
      - .env

  traefik:
    image: traefik:2.10.5
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - authelia
    env_file:
      - .env
    volumes:
      - ${DATA}/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro

  authelia:
    image: authelia/authelia:4.37.5
    container_name: authelia
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/authelia:/config
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.${DOMAIN}`)'
      - 'traefik.http.routers.authelia.entrypoints=websecure'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.middlewares=cf-real-ip@file'
      - 'traefik.http.services.authelia.loadbalancer.passhostheader=true'
      - 'traefik.http.services.authelia.loadbalancer.server.port=9091'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/authz/forward-auth?authelia_url=https://auth.${DOMAIN}'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'

  homeassistant:
    image: homeassistant/home-assistant:2023.10
    container_name: homeassistant
    restart: unless-stopped
    network_mode: host
    env_file:
      - .env
    volumes:
      - ${DATA}/homeassistant:/config

  redis:
    image: redis:7
    container_name: redis
    volumes:
      - ${DATA}/redis:/data

  mariadb:
    image: mariadb:10.11.5
    container_name: mariadb
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/mariadb:/var/lib/mysql

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:1.17.4
    container_name: paperless
    restart: unless-stopped
    depends_on:
      - mariadb
      - redis
      - gotenberg
      - tika
    env_file:
      - .env
    ports:
      - 8000:8000
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000']
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ${DATA}/paperless/data:/usr/src/paperless/data
      - /mnt/user/paperless-media:/usr/src/paperless/media
      - /mnt/user/paperless-export:/usr/src/paperless/export
      - /mnt/user/paperless-import:/usr/src/paperless/consume
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.paperless.rule=Host(`paperless.${DOMAIN}`)'
      - 'traefik.http.routers.paperless.entrypoints=websecure'
      - 'traefik.http.routers.paperless.tls=true'
      - 'traefik.http.routers.paperless.middlewares=cf-real-ip@file'
      - 'traefik.http.services.paperless.loadbalancer.passhostheader=true'
      - 'traefik.http.services.paperless.loadbalancer.server.port=8000'

  gotenberg:
    image: gotenberg/gotenberg:7.9.2
    container_name: gotenberg
    restart: unless-stopped
    command:
      - 'gotenberg'
      - '--chromium-disable-javascript=true'
      - '--chromium-allow-list=file:///tmp/.*'

  tika:
    image: ghcr.io/paperless-ngx/tika:2.9.0-minimal
    container_name: tika
    restart: unless-stopped

  # primelooter:
  #   image: ghcr.io/srhinos/primelooter:latest
  #   container_name: primelooter
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   volumes:
  #     - ${DATA}/primelooter/cookies.txt:/app/cookies.txt
  #     - ${DATA}/primelooter/publishers.txt:/app/publishers.txt
  #     - ${DATA}/primelooter/game_codes.txt:/app/game_codes.txt

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:10.8.11
    container_name: jellyfin
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
    volumes:
      - ${DATA}/jellyfin:/config
      - /mnt/user/Serien:/data/serien
      - /mnt/user/Filme:/data/filme
    ports:
      - 8096:8096
      - 8920:8920
      # - 7359:7359/udp
      # - 1900:1900/udp
    devices:
      - /dev/dri:/dev/dri

  jellyseerr:
    image: fallenbagel/jellyseerr:1.7.0
    container_name: jellyseerr
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 5055:5055
    volumes:
      - ${DATA}/jellyseerr:/app/config

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:0.13.4
    restart: unless-stopped
    env_file:
      - .env
    # environment:
      # - BASE_URL=www.${DOMAIN}
    volumes:
      - ${DATA}/homarr:/app/data/configs
      - ${DATA}/homarr-icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 7575:7575
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.homarr.rule=Host(`www.${DOMAIN}`)||Host(`${DOMAIN}`)'
      - 'traefik.http.routers.homarr.entrypoints=websecure'
      - 'traefik.http.routers.homarr.tls=true'
      - 'traefik.http.routers.homarr.middlewares=cf-real-ip@file, authelia@docker'
      - 'traefik.http.services.homarr.loadbalancer.passhostheader=true'
      - 'traefik.http.services.homarr.loadbalancer.server.port=3000'

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.8.1259
    container_name: prowlarr
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/prowlarr:/config
    ports:
      - 9696:9696

  radarr:
    image: lscr.io/linuxserver/radarr:5.0.3
    container_name: radarr
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/radarr:/config
      - /mnt/user/Filme:/movies
      - /mnt/user/Downloads:/downloads
    ports:
      - 7878:7878

  sonarr:
    image: lscr.io/linuxserver/sonarr:3.0.10
    container_name: sonarr
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/sonarr:/config
      - /mnt/user/Serien:/tv
      - /mnt/user/Downloads:/downloads
    ports:
      - 8989:8989

  readarr:
    image: lscr.io/linuxserver/readarr:0.3.7-develop
    container_name: readarr
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/readarr:/config
      - /mnt/user/eBooks:/books
      - /mnt/user/Downloads:/downloads
    ports:
      - 8787:8787

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:0.6.21
    container_name: calibre-web
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DOCKER_MODS=linuxserver/mods:universal-calibre
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1
    volumes:
      - ${DATA}/calibre-web:/config
      - /mnt/user/eBooks:/books
    ports:
      - 8083:8083

  changedetection:
    image: lscr.io/linuxserver/changedetection.io:0.45.20230906
    container_name: changedetection
    restart: unless-stopped
    env_file:
      - .env
    # environment:
      # - BASE_URL= #optional
    volumes:
      - ${DATA}/changedetection:/config
    ports:
      - 5000:5000

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:4.1.0
    container_name: sabnzbd
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/sabnzbd:/config
      - /mnt/user/Downloads:/downloads
    ports:
      - 8081:8080

  pyload-ng:
    image: lscr.io/linuxserver/pyload-ng:0.5.0
    container_name: pyload-ng
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ${DATA}/pyload-ng:/config
      - /mnt/user/Downloads:/downloads
    ports:
      - 8001:8000
      - 9666:9666
