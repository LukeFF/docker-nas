---

services:
  authentik-postgresql:
    image: postgres:17-alpine
    container_name: authentik-postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    environment:
      POSTGRES_DB: ${AUTHENTIK_PG_DB:-authentik}
      POSTGRES_USER: ${AUTHENTIK_PG_USER:-authentik}
      POSTGRES_PASSWORD: ${AUTHENTIK_PG_PASS:?database password required}
    volumes:
      - $DATA/authentik/postgresql:/var/lib/postgresql/data

  authentik-redis:
    image: redis:alpine:7-alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - $DATA/authentik/redis:/data

  authentik-server:
    image: ghcr.io/goauthentik/server:2024.10.4
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    volumes:
      - $DATA/authentik/media:/media
      - $DATA/authentik/custom-templates:/templates
      - /var/run/docker.sock:/var/run/docker.sock
    # ports:
      # - "${COMPOSE_PORT_HTTP:-9000}:9000"
      # - "${COMPOSE_PORT_HTTPS:-9443}:9443"
    depends_on:
      - authentik-postgresql
      - authentik-redis

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.10.4
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DATA/authentik/media:/media
      - $DATA/authentik/certs:/certs
      - $DATA/authentik/custom-templates:/templates
    depends_on:
      - authentik-postgresql
      - authentik-redis
